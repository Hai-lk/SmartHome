
app_name: 'testModule'
project_name: 'testProject'
project_version: '0.1'

logging:
  level: DEBUG
  format: '%(levelname)s %(asctime)s  %(message)s'
  message_format: '%(project_name)s:%(project_version)s %(app_id)s %(_filename)s:%(_lineno)d [%(tags)s] '

  filters:
    trans:
      tag: 'TRANS:'   # tag 过滤
  handlers:
    - type: file
      enable: true
      filename: 'server.log'
      encoding: 'UTF-8'
      max_bytes: 67108864 # 64MB
      backup_count: 10

    - type: console
      enable: true



http_trace: #自动日志记录
  level: DEBUG
  request:
    options:
      header:  false
      body:  true
      max_size: 500 # 最大数据包长度
    urls:
      - match: '/'
      - match: 'zoo/cat'
        body:  true

  response:
    options:
      header:  false
      body:  true
      max_size: 500 # 最大数据包长度
    urls:
      - match: '/'
      - match: 'zoo/cat'
        body:  true



datasources:
  - name: 'mongodb'
    class: 'mantis.fundamental.nosql.mongo.Datasource'
    host: 'localhost'
    port: 27017
    dbname:
    user:
    password:
    enable: true

  - name: 'zk_1'
    type: 'zookeeper'
    enable: false
    hosts: 'localhost:2181'
    root: '/camel'

  - name: 'redis'
    class: 'mantis.fundamental.redis.datasource.Datasource'
    host: 'localhost'
    port: 6379
    password: ''
    db: 0
    enable: true

message_brokers:
  - name: 'kafka_1'
    class: 'mantis.fundamental.kafka.MessageBroker'
    enable: false
    hosts: 'localhost:9092'
    zookeepers: 'localhost:2181'
    channels:
      - name: 'test'
        group: 'abcdef'  # simple_consumer if group is null
        handler:  'access.kafka.test.get_message' # last unit< get_message> is function object
        enable: true
        type: 'queue'

  - name: 'redis'
    class: 'mantis.fundamental.redis.broker.MessageBroker'
    host: '127.0.0.1'
    port: 6379
    password: ''
    db: 0
    enable: true
    channels:
      - name: 'iot_data_chan'
        handler: 'handlers.iot.get_message'
        enable: true
        type: 'pubsub' # or queue

services:
  - name: 'http'
    class: 'mantis.fundamental.flask.service.FlaskService'
    enable: true
    block: false
    cfgs:
      SQLALCHEMY_DATABASE_URI : 'sqlite:////tmp/test.db'
      SQLALCHEMY_BINDS:
      SQLALCHEMY_TRACK_MODIFICATIONS : true
      SQLALCHEMY_COMMIT_ON_TEARDOWN : true
      SECRET_KEY : "abc"
      TEMPLATES_AUTO_RELOAD: true
      DEBUG: true
      SEND_FILE_MAX_AGE_DEFAULT: 0
    http:
#      host : '172.16.109.237'
      host : ''
      port : 19002
      threaded: false
      debug: true

    blueprints:
      - package: 'http'
        url: '/'
        name: 'http'
        register: true
        modules:
          - name: 'views'
            url: 'console'
            routes:
              - url: '/'                    # url name
                name: 'index'   # function name
                methods: 'GET'
          - name: 'api'
            url: 'api'
            routes:
              - url: '/api/smartbox/actives'                    # url name
                name: 'get_active_devices'   # function name
                methods: 'GET'

              - url: '/api/smartbox/status'
                name: 'get_device_status'
                methods: 'GET'

              - url: '/api/smartbox/status/q'
                name: 'query_device_status'
                methods: 'POST'

              - url: '/api/smartbox/params'
                name: 'set_device_value'
                methods: 'POST'

              - url: '/api/smartbox/sensor/params'
                name: 'set_sensor_value'
                methods: 'POST'

              - url: '/api/smartbox/sensor/status'
                name: 'get_sensor_status'
                methods: 'GET'

              - url: '/api/smartbox/command'
                name: 'send_command'
                methods: 'POST'

              - url: '/api/smartbox/profile'
                name: 'get_device_profile'
                methods: 'GET'

  - name:       'main'
    id:     's001'
    service_id: 's001'
    service_type: 'smartserver'
    enable:     true
    class:      'main.MainService'
    table_name_lbs_cell: 'lbs_cell'
    fanout:
      - name: 'switch0'
        channels:
          - 'redis/blue_earth.device.message.queue/queue'
          - 'redis/blue_earth.device.message.pub/pubsub'

      - name: 'logging'
        channels:
          - 'redis/trade.log.{service_type}/queue'
          - 'redis/trade.log.{service_type}.{service_id}/pubsub'

    access_api_url: 'http://localhost:19002'

    message_chan_address_iot: 'redis/iot_chan.{}/pubsub'    # 接收来自iot控制消息
    message_chan_address: 'redis/message_chan.{}/pubsub'  # 来自外部控制消息

    token_valid_time: 36000

    servers:
      - name: 'server'
        enable: true
        host: ''
        port: 9088
        heartbeat: 10
        handler_cls:
          class: 'handlers.smartbox.SmartAdapter'
          kwargs:
            max : 100


# qpid-receive -b localhost:5672 -a "mq_test;{create:always,node:{type:queue,durable:true}}"






